spring:
  application:
    name: sandbox
  datasource:
    url: jdbc:h2:mem:testdb # URL for the H2 in-memory database
    username: sa # Default username for H2
    #password: password # Password for the H2 database
    #NOTE: We set DATASOURCE_PASSWORD in /workspaces/vscode-remote-try-java/.env.  If cyberark profile is active then we get password via our cyberark dependencies. Else, we get the password from our .env file.
    driver-class-name: org.h2.Driver # Driver class name for H2
    maximum-pool-size: 10 # Maximum number of connections in the pool
    max-lifetime: 0 # Infinite max idle time (connections will not be retired)
    connection-timeout: 30000 # Maximum time (in milliseconds) to wait for a connection from the pool
    idle-timeout: 600000 # Maximum time (in milliseconds) that a connection is allowed to sit idle in the pool
    validation-timeout: 5000 # Maximum time (in milliseconds) that a connection validation query can take
    connection-test-query: SELECT 1 # Query to validate connections from the pool
  h2:
    console:
      enabled: true # Enable the H2 console
      path: /h2-console # Path to access the H2 console

passwordRotationWatcher:
  cron: '15/30 * * * * ?' # Cron expression for scheduling the password rotation watcher
  #cron: '0 15/30 * * * ?' # Alternative cron expression (commented out)

logging:
  level:
    root: INFO # Set the root logging level to INFO
    com.zaxxer.hikari: TRACE # Set the logging level for HikariCP to TRACE
  file:
    name: /workspaces/vscode-remote-try-java/logs/${spring.application.name:my-app}.log # Log file name with application name
    max-size: 25MB # Maximum size of the log file before it rolls over
    max-history: 30 # Maximum number of days to retain log files
    total-size-cap: 3GB # Total size cap for all archived logs
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n" # Log pattern format for the log file

management:
  endpoints:
    web:
      exposure:
        include: restart # Expose the restart endpoint
  endpoint.restart.enabled: true